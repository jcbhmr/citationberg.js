diff --git a/citationberg.d.ts b/citationberg.d.ts
index 668e2a2..07cadb9 100644
--- a/citationberg.d.ts
+++ b/citationberg.d.ts
@@ -525,39 +525,3 @@ export class WbgVariable {
 */
   name(): WbgVariable | undefined;
 }
-
-export type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;
-
-export interface InitOutput {
-  readonly memory: WebAssembly.Memory;
-  readonly __wbg_wbgvariable_free: (a: number) => void;
-  readonly wbgvariable_Standard: (a: number) => number;
-  readonly wbgvariable_Number: (a: number) => number;
-  readonly wbgvariable_Date: (a: number) => number;
-  readonly wbgvariable_Name: (a: number) => number;
-  readonly wbgvariable_standard: (a: number) => number;
-  readonly wbgvariable_number: (a: number) => number;
-  readonly wbgvariable_date: (a: number) => number;
-  readonly wbgvariable_name: (a: number) => number;
-}
-
-export type SyncInitInput = BufferSource | WebAssembly.Module;
-/**
-* Instantiates the given `module`, which can either be bytes or
-* a precompiled `WebAssembly.Module`.
-*
-* @param {SyncInitInput} module
-*
-* @returns {InitOutput}
-*/
-export function initSync(module: SyncInitInput): InitOutput;
-
-/**
-* If `module_or_path` is {RequestInfo} or {URL}, makes a request and
-* for everything else, calls `WebAssembly.instantiate` directly.
-*
-* @param {InitInput | Promise<InitInput>} module_or_path
-*
-* @returns {Promise<InitOutput>}
-*/
-export default function __wbg_init (module_or_path?: InitInput | Promise<InitInput>): Promise<InitOutput>;
diff --git a/citationberg.js b/citationberg.js
index 501e1fb..68d3324 100644
--- a/citationberg.js
+++ b/citationberg.js
@@ -680,7 +680,16 @@ async function __wbg_init(input) {
     }
     const imports = __wbg_get_imports();
 
-    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
+    if ((typeof input === 'string' || (typeof URL === 'function' && input instanceof URL)) && `${input}`.startsWith("file:") && typeof process !== "undefined") {
+        const { createReadStream } = await import('node:fs');
+        const { Readable } = await import('node:stream');
+        const readable = Readable.toWeb(createReadStream(new URL(input)));
+        input = new Response(readable, {
+            headers: {
+                "Content-Type": "application/wasm",
+            },
+        });
+    } else if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
         input = fetch(input);
     }
 
@@ -691,5 +700,4 @@ async function __wbg_init(input) {
     return __wbg_finalize_init(instance, module);
 }
 
-export { initSync }
-export default __wbg_init;
+await __wbg_init();
diff --git a/package.json b/package.json
index 569e8fa..abdd3f4 100644
--- a/package.json
+++ b/package.json
@@ -24,5 +24,7 @@
     "csl",
     "bibliography",
     "citation"
-  ]
-}
\ No newline at end of file
+  ],
+  "type": "module",
+  "exports": "./citationberg.js"
+}
