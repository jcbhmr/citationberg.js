diff --git a/citationberg_js.d.ts b/citationberg_js.d.ts
index 17c7a43..4bee483 100644
--- a/citationberg_js.d.ts
+++ b/citationberg_js.d.ts
@@ -555,8 +555,7 @@ export class Variable {
   is_number_of_variable(): boolean;
 }
 
-export type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;
-
+/*
 export interface InitOutput {
   readonly memory: WebAssembly.Memory;
   readonly __wbg_bibliography_free: (a: number) => void;
@@ -656,24 +655,4 @@ export interface InitOutput {
   readonly __wbindgen_malloc: (a: number, b: number) => number;
   readonly __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
 }
-
-export type SyncInitInput = BufferSource | WebAssembly.Module;
-/**
-* Instantiates the given `module`, which can either be bytes or
-* a precompiled `WebAssembly.Module`.
-*
-* @param {SyncInitInput} module
-*
-* @returns {InitOutput}
-*/
-export function initSync(module: SyncInitInput): InitOutput;
-
-/**
-* If `module_or_path` is {RequestInfo} or {URL}, makes a request and
-* for everything else, calls `WebAssembly.instantiate` directly.
-*
-* @param {InitInput | Promise<InitInput>} module_or_path
-*
-* @returns {Promise<InitOutput>}
 */
-export default function __wbg_init (module_or_path?: InitInput | Promise<InitInput>): Promise<InitOutput>;
diff --git a/citationberg_js.js b/citationberg_js.js
index 69d2acd..0404448 100644
--- a/citationberg_js.js
+++ b/citationberg_js.js
@@ -1589,7 +1589,16 @@ async function __wbg_init(input) {
     }
     const imports = __wbg_get_imports();
 
-    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
+    if ((typeof input === 'string' || (typeof URL === 'function' && input instanceof URL)) && `${input}`.startsWith('file:') && typeof process !== "undefined") {
+        const { createReadStream } = await import('node:fs');
+        const { Readable } = await import('node:stream');
+        const readable = Readable.toWeb(createReadStream(new URL(input)));
+        input = new Response(readable, {
+            headers: {
+                "Content-Type": "application/wasm",
+            },
+        });
+    } else if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
         input = fetch(input);
     }
 
@@ -1600,5 +1609,4 @@ async function __wbg_init(input) {
     return __wbg_finalize_init(instance, module);
 }
 
-export { initSync }
-export default __wbg_init;
+await __wbg_init();
diff --git a/package.json b/package.json
index 7e81a51..e26b653 100644
--- a/package.json
+++ b/package.json
@@ -10,5 +10,8 @@
   "types": "citationberg_js.d.ts",
   "sideEffects": [
     "./snippets/*"
-  ]
-}
\ No newline at end of file
+  ],
+  "name": "citationberg",
+  "type": "module",
+  "exports": "./citationberg_js.js"
+}
