use citationberg;
use wasm_bindgen::prelude::*;

#[wasm_bindgen]
#[derive(Clone)]
pub enum StandardVariable {
    Abstract,
    Annote,
    Archive,
    ArchiveCollection,
    ArchiveLocation,
    ArchivePlace,
    Authority,
    CallNumber,
    CitationKey,
    CitationLabel,
    CollectionTitle,
    ContainerTitle,
    ContainerTitleShort,
    Dimensions,
    Division,
    DOI,
    Event,
    EventTitle,
    EventPlace,
    Genre,
    ISBN,
    ISSN,
    Jurisdiction,
    Keyword,
    Language,
    License,
    Medium,
    Note,
    OriginalPublisher,
    OriginalPublisherPlace,
    OriginalTitle,
    PartTitle,
    PMCID,
    PMID,
    Publisher,
    PublisherPlace,
    References,
    ReviewedGenre,
    ReviewedTitle,
    Scale,
    Source,
    Status,
    Title,
    TitleShort,
    URL,
    VolumeTitle,
    YearSuffix,
}

impl From<StandardVariable> for citationberg::taxonomy::StandardVariable {
    fn from(v: StandardVariable) -> Self {
        match v {
            StandardVariable::Abstract => Self::Abstract,
            StandardVariable::Annote => Self::Annote,
            StandardVariable::Archive => Self::Archive,
            StandardVariable::ArchiveCollection => Self::ArchiveCollection,
            StandardVariable::ArchiveLocation => Self::ArchiveLocation,
            StandardVariable::ArchivePlace => Self::ArchivePlace,
            StandardVariable::Authority => Self::Authority,
            StandardVariable::CallNumber => Self::CallNumber,
            StandardVariable::CitationKey => Self::CitationKey,
            StandardVariable::CitationLabel => Self::CitationLabel,
            StandardVariable::CollectionTitle => Self::CollectionTitle,
            StandardVariable::ContainerTitle => Self::ContainerTitle,
            StandardVariable::ContainerTitleShort => Self::ContainerTitleShort,
            StandardVariable::Dimensions => Self::Dimensions,
            StandardVariable::Division => Self::Division,
            StandardVariable::DOI => Self::DOI,
            StandardVariable::Event => Self::Event,
            StandardVariable::EventTitle => Self::EventTitle,
            StandardVariable::EventPlace => Self::EventPlace,
            StandardVariable::Genre => Self::Genre,
            StandardVariable::ISBN => Self::ISBN,
            StandardVariable::ISSN => Self::ISSN,
            StandardVariable::Jurisdiction => Self::Jurisdiction,
            StandardVariable::Keyword => Self::Keyword,
            StandardVariable::Language => Self::Language,
            StandardVariable::License => Self::License,
            StandardVariable::Medium => Self::Medium,
            StandardVariable::Note => Self::Note,
            StandardVariable::OriginalPublisher => Self::OriginalPublisher,
            StandardVariable::OriginalPublisherPlace => Self::OriginalPublisherPlace,
            StandardVariable::OriginalTitle => Self::OriginalTitle,
            StandardVariable::PartTitle => Self::PartTitle,
            StandardVariable::PMCID => Self::PMCID,
            StandardVariable::PMID => Self::PMID,
            StandardVariable::Publisher => Self::Publisher,
            StandardVariable::PublisherPlace => Self::PublisherPlace,
            StandardVariable::References => Self::References,
            StandardVariable::ReviewedGenre => Self::ReviewedGenre,
            StandardVariable::ReviewedTitle => Self::ReviewedTitle,
            StandardVariable::Scale => Self::Scale,
            StandardVariable::Source => Self::Source,
            StandardVariable::Status => Self::Status,
            StandardVariable::Title => Self::Title,
            StandardVariable::TitleShort => Self::TitleShort,
            StandardVariable::URL => Self::URL,
            StandardVariable::VolumeTitle => Self::VolumeTitle,
            StandardVariable::YearSuffix => Self::YearSuffix,
        }
    }
}

impl From<citationberg::taxonomy::StandardVariable> for StandardVariable {
    fn from(v: citationberg::taxonomy::StandardVariable) -> Self {
        match v {
            citationberg::taxonomy::StandardVariable::Abstract => Self::Abstract,
            citationberg::taxonomy::StandardVariable::Annote => Self::Annote,
            citationberg::taxonomy::StandardVariable::Archive => Self::Archive,
            citationberg::taxonomy::StandardVariable::ArchiveCollection => Self::ArchiveCollection,
            citationberg::taxonomy::StandardVariable::ArchiveLocation => Self::ArchiveLocation,
            citationberg::taxonomy::StandardVariable::ArchivePlace => Self::ArchivePlace,
            citationberg::taxonomy::StandardVariable::Authority => Self::Authority,
            citationberg::taxonomy::StandardVariable::CallNumber => Self::CallNumber,
            citationberg::taxonomy::StandardVariable::CitationKey => Self::CitationKey,
            citationberg::taxonomy::StandardVariable::CitationLabel => Self::CitationLabel,
            citationberg::taxonomy::StandardVariable::CollectionTitle => Self::CollectionTitle,
            citationberg::taxonomy::StandardVariable::ContainerTitle => Self::ContainerTitle,
            citationberg::taxonomy::StandardVariable::ContainerTitleShort => {
                Self::ContainerTitleShort
            }
            citationberg::taxonomy::StandardVariable::Dimensions => Self::Dimensions,
            citationberg::taxonomy::StandardVariable::Division => Self::Division,
            citationberg::taxonomy::StandardVariable::DOI => Self::DOI,
            citationberg::taxonomy::StandardVariable::Event => Self::Event,
            citationberg::taxonomy::StandardVariable::EventTitle => Self::EventTitle,
            citationberg::taxonomy::StandardVariable::EventPlace => Self::EventPlace,
            citationberg::taxonomy::StandardVariable::Genre => Self::Genre,
            citationberg::taxonomy::StandardVariable::ISBN => Self::ISBN,
            citationberg::taxonomy::StandardVariable::ISSN => Self::ISSN,
            citationberg::taxonomy::StandardVariable::Jurisdiction => Self::Jurisdiction,
            citationberg::taxonomy::StandardVariable::Keyword => Self::Keyword,
            citationberg::taxonomy::StandardVariable::Language => Self::Language,
            citationberg::taxonomy::StandardVariable::License => Self::License,
            citationberg::taxonomy::StandardVariable::Medium => Self::Medium,
            citationberg::taxonomy::StandardVariable::Note => Self::Note,
            citationberg::taxonomy::StandardVariable::OriginalPublisher => Self::OriginalPublisher,
            citationberg::taxonomy::StandardVariable::OriginalPublisherPlace => {
                Self::OriginalPublisherPlace
            }
            citationberg::taxonomy::StandardVariable::OriginalTitle => Self::OriginalTitle,
            citationberg::taxonomy::StandardVariable::PartTitle => Self::PartTitle,
            citationberg::taxonomy::StandardVariable::PMCID => Self::PMCID,
            citationberg::taxonomy::StandardVariable::PMID => Self::PMID,
            citationberg::taxonomy::StandardVariable::Publisher => Self::Publisher,
            citationberg::taxonomy::StandardVariable::PublisherPlace => Self::PublisherPlace,
            citationberg::taxonomy::StandardVariable::References => Self::References,
            citationberg::taxonomy::StandardVariable::ReviewedGenre => Self::ReviewedGenre,
            citationberg::taxonomy::StandardVariable::ReviewedTitle => Self::ReviewedTitle,
            citationberg::taxonomy::StandardVariable::Scale => Self::Scale,
            citationberg::taxonomy::StandardVariable::Source => Self::Source,
            citationberg::taxonomy::StandardVariable::Status => Self::Status,
            citationberg::taxonomy::StandardVariable::Title => Self::Title,
            citationberg::taxonomy::StandardVariable::TitleShort => Self::TitleShort,
            citationberg::taxonomy::StandardVariable::URL => Self::URL,
            citationberg::taxonomy::StandardVariable::VolumeTitle => Self::VolumeTitle,
            citationberg::taxonomy::StandardVariable::YearSuffix => Self::YearSuffix,
        }
    }
}
